{"version":3,"sources":["service/firebase.js","context/ChatContext.jsx","hooks/useAuth.js","hooks/useResolved.js","components/App/App.jsx","components/Chat/Chat.jsx","components/FormField/FormField.jsx","components/Login/formikConfig.js","components/NavBar/NavBar.jsx","components/Login/Login.jsx","components/Signup/formikConfig.js","components/Signup/Signup.jsx","helpers/notMe.js","helpers/joinUsernames.js","helpers/groupMessages.js","components/ChatList/ChatList.jsx","components/LeftRail/LeftRail.jsx","components/ChatInput/ChatInput.jsx","components/RailHeader/RailHeader.jsx","components/ChatAvatar/ChatAvatar.jsx","components/ChatToolbar/ChatToolbar.jsx","components/SearchUsers/SearchUsers.jsx","hooks/useDebounce.js","components/MessageList/MessageList.jsx","hooks/useScrollToBottom.js","components/ImageUpload/ImageUpload.jsx","components/Home/Home.jsx","components/About/About.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","error","test","message","console","stack","fb","auth","storage","firestore","ChatContext","createContext","ChatProvider","children","authUser","useState","myChats","setMyChats","chatConfig","setChatConfig","selectedChat","setSelectedChat","useEffect","collection","doc","uid","onSnapshot","snap","userSecret","avatar","data","userName","projectID","Provider","value","selectChatClick","chat","getMessages","id","messages","deleteChatClick","admin","username","window","confirm","deleteChat","leaveChat","createChatClick","newChat","title","useChat","useContext","useAuth","setAuthUser","onAuthStateChanged","user","useResolved","vals","resolved","setResolved","every","v","undefined","App","className","path","exact","component","About","Home","Chat","Login","Signup","Loader","active","size","history","useHistory","authResolved","push","hideUI","onConnect","getChats","onNewChat","sort","a","b","onDeleteChat","filter","onNewMessage","chatId","chatThatMessageBelongsTo","find","filteredChats","updatedChat","last_message","FormField","placeholder","name","label","type","defaultValues","email","password","validationSchema","Yup","shape","required","NavBar","data-aos","data-aos-anchor","data-aos-offset","data-aos-duration","data-aos-easing","data-aos-mirror","data-aos-once","to","onClick","AOS","init","serverError","setServerError","onSubmit","setSubmitting","signInWithEmailAndPassword","then","res","catch","err","code","finally","validateOnMount","initialValues","isValid","isSubmitting","disabled","verifyPassword","min","oneOf","matches","createUserWithEmailAndPassword","fetch","method","body","JSON","stringify","userId","headers","set","notMe","people","p","person","joinUsernames","currentUsername","map","un","join","groupMessages","finalArr","currentArr","currentAuthor","forEach","m","sender","splice","length","ChatList","log","index","Icon","circular","inverted","color","attachments","text","slice","LeftRail","chatsResolved","ChatInput","chatInputText","setChatInputText","imageModalOpen","setImageModalOpen","inputRef","useRef","image","setImage","sendChatMessage","sendMessage","files","input","current","click","onKeyPress","e","key","onChange","target","ref","accept","file","onFileAttach","mode","close","RailHeader","configResolved","crop","header","croppedImage","uploadRef","child","put","getDownloadURL","url","update","IconGroup","Image","src","toUpperCase","corner","signOut","ChatAvatar","fbResolved","setAvatar","where","get","docs","ChatToolbar","searching","setSearching","closeFn","visible","SearchUsers","searchRef","loading","setLoading","searchTerm","setSearchTerm","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","searchResults","setSearchResults","focus","getOtherPeople","userNames","Object","keys","toLowerCase","includes","style","display","Search","fluid","onBlur","open","r","onSearchChange","results","onResultSelect","result","addPerson","c","MessageList","trigger","Promise","all","Array","from","document","images","img","complete","resolve","onload","onerror","getElementsByClassName","scrollTop","scrollHeight","individualMessage","alt","ImageUpload","imageSrc","setImageSrc","cropRef","fr","FileReader","readAsDataURL","Modal","dimmer","Header","Content","width","height","border","Actions","canvas","getImageScaledToCanvas","toDataURL","blob","data-aos-anchor-placement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df4c4d0f.chunk.js","sourcesContent":["import firebase from \"firebase/app\"; // <-- This must be first\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\ntry {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyDUUvD9AfhHvDRZRIxDQ2MPlNB2ppMV3Pc\",\n    authDomain: \"atlas-chat-390b1.firebaseapp.com\",\n    projectId: \"atlas-chat-390b1\",\n    storageBucket: \"atlas-chat-390b1.appspot.com\",\n    messagingSenderId: \"533078905096\",\n    appId: \"1:533078905096:web:f7fae438134cdea50cdcbd\"\n \n  });\n} catch (error) {\n  if (!/already exists/u.test(error.message)) {\n    console.error(\"Firebase admin initialization error\", error.stack);\n  }\n}\n\nexport const fb = {\n  auth: firebase.auth(),\n  storage: firebase.storage(),\n  firestore: firebase.firestore(),\n};\n","import { fb } from \"service\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { newChat, leaveChat, deleteChat, getMessages } from \"react-chat-engine\";\n\nexport const ChatContext = createContext();\n\nexport const ChatProvider = ({ children, authUser }) => {\n  const [myChats, setMyChats] = useState();\n  const [chatConfig, setChatConfig] = useState();\n  const [selectedChat, setSelectedChat] = useState();\n\n  const createChatClick = () => {\n    newChat(chatConfig, { title: \"\" });\n  };\n  const deleteChatClick = (chat) => {\n    const isAdmin = chat.admin.username === chatConfig.userName;\n\n    if (\n      isAdmin &&\n      window.confirm(\"Are you sure you want to delete this chat?\")\n    ) {\n      deleteChat(chatConfig, chat?.id);\n    } else if (window.confirm(\"Are you sure you want to leave this chat?\")) {\n      leaveChat(chatConfig, chat?.id, chatConfig?.userName);\n    }\n  };\n  const selectChatClick = (chat) => {\n    getMessages(chatConfig, chat.id, (messages) => {\n      setSelectedChat({\n        ...chat,\n        messages,\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      fb.firestore\n        .collection(\"chatUsers\")\n        .doc(authUser.uid)\n        .onSnapshot((snap) => {\n          setChatConfig({\n            userSecret: authUser.uid,\n            avatar: snap?.data()?.avatar,\n            userName: snap?.data()?.userName,\n            projectID: \"7f809daa-db06-4565-9e80-21334a52b659\",\n          });\n        });\n    }\n  }, [authUser, setChatConfig]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        myChats,\n        setMyChats,\n        chatConfig,\n        selectedChat,\n        setChatConfig,\n        setSelectedChat,\n        selectChatClick,\n        deleteChatClick,\n        createChatClick,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const useChat = () => {\n  const {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat,\n    setChatConfig,\n    setSelectedChat,\n    selectChatClick,\n    deleteChatClick,\n    createChatClick,\n  } = useContext(ChatContext);\n\n  return {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat,\n    setChatConfig,\n    setSelectedChat,\n    selectChatClick,\n    deleteChatClick,\n    createChatClick,\n  };\n};\n","import { fb } from \"service\";\nimport { useEffect, useState } from \"react\";\n\nexport const useAuth = () => {\n  const [authUser, setAuthUser] = useState();\n\n  useEffect(() => {\n    const unsubscribe = fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        setAuthUser(user);\n      } else {\n        setAuthUser(null);\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  return {\n    authUser,\n  };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useResolved = (...vals) => {\n  const [resolved, setResolved] = useState(false);\n\n  useEffect(() => {\n    setResolved(vals.every((v) => v !== undefined));\n  }, [vals]);\n\n  return resolved;\n};\n","import { ChatProvider } from \"context\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { useAuth, useResolved } from \"hooks\";\nimport { Login, Signup, Chat, Home, About } from \"components\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Loader } from \"semantic-ui-react\";\n\nexport const App = () => {\n  const { authUser } = useAuth();\n  const authResolved = useResolved(authUser);\n\n  return authResolved ? (\n    <ChatProvider authUser={authUser}>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/about\" exact component={About} />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/chat\" exact component={Chat} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n        </Switch>\n      </div>\n    </ChatProvider>\n  ) : (\n    <div className=\"chats-loading-globle\">\n      <Loader active size=\"huge\" />\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useChat } from \"context\";\nimport { getChats, ChatEngine } from \"react-chat-engine\";\nimport { LeftRail, ChatToolbar, ChatInput, MessageList } from \"components\";\nimport { useAuth, useResolved } from \"hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Chat = () => {\n  const {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat,\n    selectChatClick,\n    setSelectedChat,\n  } = useChat();\n  const history = useHistory();\n  const { authUser } = useAuth();\n  const authResolved = useResolved(authUser);\n\n\n  useEffect(() => {\n    if (authResolved) {\n      history.push(!!authUser ? \"/chat\" : \"/login\");\n    }\n  }, [authResolved, authUser, history]);\n\n  return (\n    <>\n      {!!chatConfig && (\n        <ChatEngine\n          hideUI={true}\n          userName={chatConfig.userName}\n          projectID={chatConfig.projectID}\n          userSecret={chatConfig.userSecret}\n          onConnect={() => {\n            getChats(chatConfig, setMyChats);\n          }}\n          onNewChat={(chat) => {\n            if (chat.admin.username === chatConfig.userName) {\n              selectChatClick(chat);\n            }\n            setMyChats([...myChats, chat].sort((a, b) => a.id - b.id));\n          }}\n          onDeleteChat={(chat) => {\n            if (selectedChat?.id === chat.id) {\n              setSelectedChat(null);\n            }\n            setMyChats(\n              myChats\n                .filter((chat) => chat.id !== chat.id)\n                .sort((a, b) => a.id - b.id)\n            );\n          }}\n          onNewMessage={(chatId, message) => {\n            if (selectedChat && chatId === selectedChat.id) {\n              setSelectedChat({\n                ...selectedChat,\n                messages: [...selectedChat.messages, message],\n              });\n            }\n            const chatThatMessageBelongsTo = myChats.find(\n              (chat) => chat.id === chatId\n            );\n            const filteredChats = myChats.filter((chat) => chat.id !== chatId);\n            const updatedChat = {\n              ...chatThatMessageBelongsTo,\n              last_message: message,\n            };\n            setMyChats(\n              [updatedChat, ...filteredChats].sort((a, b) => a.id - b.id)\n            );\n          }}\n        />\n      )}\n\n      <div className=\"chat-container\">\n        <LeftRail />\n        <div className=\"current-chat\">\n          {selectedChat ? (\n            <div className=\"chat\">\n              <ChatToolbar />\n              <MessageList />\n              <ChatInput />\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { ErrorMessage, Field } from 'formik';\n\nexport const FormField = ({ placeholder,name, label, type = 'text' }) => (\n  <label>\n    {label}\n    <Field name={name} type={type}  placeholder={placeholder}/>\n    <ErrorMessage className=\"error\" component=\"div\" name={name} />\n  </label>\n);\n","import * as Yup from 'yup';\n\nexport const defaultValues = {\n  email: '',\n  password: '',\n};\n\nexport const validationSchema = Yup.object().shape({\n  email: Yup.string().required('Required'),\n  password: Yup.string().required('Required'),\n});\n","import { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <nav\r\n      data-aos=\"fade-down\"\r\n      data-aos-anchor=\".nav-bar\"\r\n      data-aos-offset=\"200\"\r\n      data-aos-duration=\"1500\"\r\n      data-aos-easing=\"ease\"\r\n      data-aos-mirror=\"true\"\r\n      data-aos-once=\"false\"\r\n      className=\"nav-bar\"\r\n    >\r\n      <Link to=\"/\" className=\"logo\" />\r\n\r\n      <div className=\"nav-content\">\r\n        <Link to=\"/\" className=\"nav-links\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/about\" className=\"nav-links\">\r\n          About\r\n        </Link>\r\n        <Link to=\"/chat\" className=\"nav-links\">\r\n          Chat\r\n        </Link>\r\n      </div>\r\n      <div className=\"nav-login\">\r\n        <Link\r\n          onClick={() => {\r\n            history.push(\"/signup\");\r\n          }}\r\n          className=\"nav-call\"\r\n        >\r\n          Singup\r\n        </Link>\r\n        <Link to=\"/login\" className=\"link\">\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { fb } from \"service\";\nimport { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormField } from \"components/FormField/FormField\";\nimport { validationSchema, defaultValues } from \"./formikConfig\";\nimport { NavBar } from \"components/NavBar/NavBar\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { useEffect } from \"react\";\n\nexport const Login = () => {\n  useEffect(() => {\n    AOS.init();\n  }, []);\n  const history = useHistory();\n  const [serverError, setServerError] = useState(\"\");\n\n  const login = ({ email, password }, { setSubmitting }) => {\n    fb.auth\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        if (!res.user) {\n          setServerError(\n            \"We're having trouble logging you in. Please try again.\"\n          );\n        } else {\n          history.push(\"/chat\");\n        }\n      })\n      .catch((err) => {\n        if (err.code === \"auth/wrong-password\") {\n          setServerError(\"Invalid credentials\");\n        } else if (err.code === \"auth/user-not-found\") {\n          setServerError(\"No account for this email\");\n        } else {\n          setServerError(\"Something went wrong :(\");\n        }\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  return (\n    <div className=\"login\">\n      <NavBar />\n      <div className=\"sing-container\">\n        <div className=\"sing-hero\">\n          <div className=\"sing-avatar\"></div>\n        </div>\n        <div\n          data-aos=\"fade-up\"\n          data-aos-offset=\"200\"\n          data-aos-duration=\"1000\"\n          data-aos-easing=\"ease-out\"\n          data-aos-mirror=\"true\"\n          data-aos-once=\"false\"\n          className=\"auth-form\"\n        >\n          <h1>Login</h1>\n          <Formik\n            onSubmit={login}\n            validateOnMount={true}\n            initialValues={defaultValues}\n            validationSchema={validationSchema}\n          >\n            {({ isValid, isSubmitting }) => (\n              <Form>\n                <FormField\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  placeholder=\"Enter your e-mail\"\n                />\n                <FormField\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  placeholder=\"Your Password\"\n                />\n\n                <div className=\"auth-link-container\">\n                  Don't have an account?{\" \"}\n                  <span\n                    className=\"auth-link\"\n                    onClick={() => history.push(\"signup\")}\n                  >\n                    Sign Up!\n                  </span>\n                </div>\n\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>\n                  Login\n                </button>\n              </Form>\n            )}\n          </Formik>\n\n          {!!serverError && <div className=\"error\">{serverError}</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const defaultValues = {\n  email: '',\n  password: '',\n  userName: '',\n  verifyPassword: '',\n};\n\nexport const validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(8, 'Must be at least 8 characters'),\n  verifyPassword: Yup.string().required('Required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  userName: Yup.string().required('Required').matches(/^\\S*$/, 'No spaces').min(3, 'Must be at least 3 characters'),\n});\n","import { NavBar} from \"components\";\nimport { fb } from 'service';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FormField } from 'components';\nimport { defaultValues, validationSchema } from './formikConfig';\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { useEffect } from \"react\";\n\nexport const Signup = () => {\n  useEffect(() => {\n    AOS.init();\n  }, [])\n  const history = useHistory();\n  const [serverError, setServerError] = useState('');\n\n  const signUp = ({ email, userName, password }, { setSubmitting }) => {\n    fb.auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(res => {\n        if (res?.user?.uid) {\n          fetch('/api/createUser', {\n            method: 'POST',\n            body: JSON.stringify({\n              userName,\n              userId: res.user.uid,\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }).then(() => {\n\n\n            fb.firestore\n              .collection('chatUsers')\n              .doc(res.user.uid)\n              .set({ userName, avatar: '' });\n\n              history.push(\"/chat\");\n          });\n\n        } else {\n          setServerError(\n            \"We're having trouble signing you up. Please try again.\",\n          );\n        }\n      })\n      .catch(err => {\n        if (err.code === 'auth/email-already-in-use') {\n          setServerError('An account with this email already exists');\n        } else {\n          setServerError(\n            \"We're having trouble signing you up. Please try again.\",\n          );\n        }\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  return (\n    <div className=\"singup\">\n\n<NavBar />\n\n<div className=\"sing-container\">\n        <div className=\"sing-hero\">\n          <div className=\"sing-avatar\"></div>\n        </div>\n    <div   data-aos=\"fade-up\"\n          data-aos-offset=\"200\"\n          data-aos-duration=\"1000\"\n          data-aos-easing=\"ease-out\"\n          data-aos-mirror=\"true\"\n          data-aos-once=\"false\" className=\"auth-form\">\n      <h1>Signup</h1>\n      <Formik\n        onSubmit={signUp}\n        validateOnMount={true}\n        initialValues={defaultValues}\n        validationSchema={validationSchema}\n        >\n        {({ isValid, isSubmitting }) => (\n          <Form>\n            <FormField name=\"userName\" label=\"User Name\"  placeholder='Enter your UserName'/>\n            <FormField name=\"email\" label=\"Email\" type=\"email\"  placeholder='Enter your e-mail'/>\n            <FormField name=\"password\" label=\"Password\" type=\"password\"  placeholder='Enter your Password'/>\n            <FormField\n              type=\"password\"\n              name=\"verifyPassword\"\n              label=\"Verify Password\"\n              placeholder='Verify your Password'\n              />\n\n            <div className=\"auth-link-container\">\n              Already have an account?{' '}\n              <span className=\"auth-link\" onClick={() => history.push('login')}>\n                Log In!\n              </span>\n            </div>\n\n            <button disabled={isSubmitting || !isValid} type=\"submit\">\n              Sign Up\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n      {!!serverError && <div className=\"error\">{serverError}</div>}\n    </div>\n    </div>\n        </div>\n  );\n};\n","export const notMe = (chatConfig, selectedChat) => {\n  return selectedChat.people.find(\n    (p) => p.person.username !== chatConfig.userName\n  )?.person?.username;\n};\n","export const joinUsernames = (people, currentUsername) => {\n  return (\n    \"\" +\n    people\n      .map((p) => p.person.username)\n      .filter((un) => un !== currentUsername)\n      .join(\",\")\n  );\n};\n","export const groupMessages = (messages) => {\n  const finalArr = [];\n  let currentArr = [];\n  let currentAuthor = \"\";\n  messages.forEach((m) => {\n    if (m?.sender?.username !== currentAuthor) {\n      if (currentAuthor) {\n        finalArr.push([...currentArr]);\n      }\n      currentArr.splice(0, currentArr.length);\n      currentAuthor = m?.sender?.username;\n    } else {\n      currentArr.push(m);\n    }\n  });\n  finalArr.push([...currentArr]);\n\n  return finalArr;\n};\n","import React from \"react\";\nimport { useChat } from \"context\";\nimport { ChatAvatar } from \"components\";\nimport { Icon } from \"semantic-ui-react\";\nimport { joinUsernames, notMe } from \"helpers\";\nimport { useEffect } from \"react\";\n\nexport const ChatList = () => {\n  const {\n    myChats,\n    chatConfig,\n    selectedChat,\n    selectChatClick,\n    deleteChatClick,\n  } = useChat();\n  useEffect(() => {\n    console.log(\n      myChats,\n      chatConfig,\n      selectedChat,\n      selectChatClick,\n      deleteChatClick\n    );\n  });\n  return (\n    <div className=\"chat-list\">\n      {myChats.map((chat, index) => (\n        <div\n          className={`chat-list-item ${\n            selectedChat?.id === chat.id ? \"selected-chat-item\" : \"\"\n          }`}\n          key={index}\n        >\n          <div\n            onClick={() => selectChatClick(chat)}\n            className=\"chat-list-item-content\"\n          >\n            {chat.people.length === 1 ? (\n              <>\n                <Icon circular inverted color=\"violet\" name=\"user cancel\" />\n                <div className=\"chat-list-preview\">\n                  <div className=\"preview-username\">No One Added Yet</div>\n                </div>\n              </>\n            ) : chat.people.length === 2 ? (\n              <>\n                <ChatAvatar username={notMe(chatConfig, chat)} chat={chat} />\n\n                <div className=\"chat-list-preview\">\n                  <div className=\"preview-username\">\n                    {notMe(chatConfig, chat)}\n                  </div>\n                  <div className=\"preview-message\">\n                    {chat.last_message.attachments.length\n                      ? `${chat.last_message.sender.username} sent an attachment`\n                      : chat.last_message.text.slice(0, 60) + \"...\"}\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <Icon circular inverted color=\"brown\" name=\"users\" />\n                <div className=\"chat-list-preview\">\n                  <div className=\"preview-username\">\n                    {joinUsernames(chat.people, chatConfig.userName).slice(\n                      0,\n                      50\n                    )}\n                    ...\n                  </div>\n                  <div className=\"preview-message\">\n                    {chat.last_message.attachments.length\n                      ? `${chat.last_message.sender.username} sent an attachment`\n                      : chat.last_message.text.slice(0, 50) + \"...\"}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n\n          <div\n            onClick={() => deleteChatClick(chat)}\n            className=\"chat-item-delete\"\n          >\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { useChat } from \"context\";\nimport { useResolved } from \"hooks\";\nimport { ChatList } from \"components\";\nimport { RailHeader } from \"components\";\nimport { Loader } from \"semantic-ui-react\";\n\nexport const LeftRail = () => {\n  const { myChats, createChatClick } = useChat();\n  const chatsResolved = useResolved(myChats);\n  return (\n    <div className=\"left-rail\">\n      <RailHeader />\n      {chatsResolved ? (\n        <>\n          {!!myChats.length ? (\n            <div className=\"chat-list-container\">\n              <ChatList />\n            </div>\n          ) : (\n            <div className=\"chat-list-container no-chats-yet\">\n              <h3>No Chats Yet</h3>\n            </div>\n          )}\n          <button className=\"create-chat-button\" onClick={createChatClick}>\n            Create Chat\n          </button>\n        </>\n      ) : (\n        <div className=\"chats-loading\">\n          <Loader active size=\"huge\" />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useChat } from \"context\";\nimport { useState, useRef } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { ImageUpload } from \"components\";\nimport { sendMessage } from \"react-chat-engine\";\n\nexport const ChatInput = () => {\n  const { chatConfig, selectedChat } = useChat();\n  const [chatInputText, setChatInputText] = useState(\"\");\n  const [imageModalOpen, setImageModalOpen] = useState(false);\n\n  const inputRef = useRef(null);\n  const [image, setImage] = useState();\n\n  const sendChatMessage = () => {\n    if (selectedChat && chatInputText) {\n      setChatInputText(\"\");\n      sendMessage(chatConfig, selectedChat.id, {\n        text: chatInputText,\n        files: [],\n      });\n    }\n  };\n\n  const onFileAttach = (file) => {\n    setImage(file);\n    setImageModalOpen(true);\n  };\n\n  return (\n    <>\n      <div className=\"chat-controls\">\n        <div\n          onClick={() => {\n            const input = inputRef.current;\n            if (input) {\n              input.value = \"\";\n              input.click();\n            }\n          }}\n          className=\"attachment-icon\"\n        >\n          <Icon name=\"attach\" color=\"black\" />\n        </div>\n        <input\n          value={chatInputText}\n          className=\"chat-input\"\n          placeholder=\"Send a message\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendChatMessage();\n            }\n          }}\n          onChange={(e) => setChatInputText(e.target.value)}\n        />\n        <div onClick={sendChatMessage} className=\"send-message-icon\">\n          <Icon name=\"send\" color=\"black\" />\n        </div>\n      </div>\n\n      <input\n        type=\"file\"\n        ref={inputRef}\n        className=\"file-input\"\n        accept=\"image/jpeg,image/png\"\n        onChange={(e) => {\n          const file = e.target?.files?.[0];\n          if (file) {\n            onFileAttach(file);\n          }\n        }}\n      />\n\n      {imageModalOpen && !!image && (\n        <ImageUpload\n          file={image}\n          mode=\"message\"\n          onSubmit={() => {\n            sendMessage(\n              chatConfig,\n              selectedChat.id,\n              {\n                text: chatInputText,\n                files: [image],\n              },\n              () => {\n                setImage(null);\n                setChatInputText(\"\");\n              }\n            );\n          }}\n          close={() => setImageModalOpen(false)}\n        />\n      )}\n    </>\n  );\n};\n","import { fb } from \"service\";\nimport { useChat } from \"context\";\nimport { useResolved } from \"hooks\";\nimport { useRef, useState } from \"react\";\nimport { ImageUpload } from \"components\";\nimport { Icon, IconGroup, Image, Loader } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const RailHeader = () => {\n  const { chatConfig } = useChat();\n  const configResolved = useResolved(chatConfig);\n  const inputRef = useRef(null);\n  const [image, setImage] = useState();\n  const history = useHistory();\n\n  const onFileAttach = (file) => {\n    setImage(file);\n  };\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        ref={inputRef}\n        className=\"file-input\"\n        accept=\"image/jpeg,image/png\"\n        onChange={(e) => {\n          const file = e.target?.files?.[0];\n          if (file) {\n            onFileAttach(file);\n          }\n        }}\n      />\n\n      {!!image && (\n        <ImageUpload\n          crop\n          file={image}\n          header=\"Set Your Avatar\"\n          mode=\"message\"\n          onSubmit={(croppedImage) => {\n            const storageRef = fb.storage.ref();\n            const uploadRef = storageRef.child(\n              `${chatConfig.userSecret}_avatar.jpg`\n            );\n            uploadRef.put(croppedImage).then(() => {\n              uploadRef.getDownloadURL().then((url) => {\n                fb.firestore\n                  .collection(\"chatUsers\")\n                  .doc(chatConfig.userSecret)\n                  .update({ avatar: url })\n                  .then(() => {\n                    setImage(null);\n                  });\n              });\n            });\n          }}\n          close={() => setImage(null)}\n        />\n      )}\n\n      <div className=\"left-rail-header\">\n        {configResolved && !!chatConfig ? (\n          <div className=\"current-user-info\">\n            <IconGroup\n              onClick={() => {\n                const input = inputRef.current;\n                if (input) {\n                  input.value = \"\";\n                  input.click();\n                }\n              }}\n              className=\"user-avatar\"\n              size=\"large\"\n            >\n              {chatConfig.avatar ? (\n                <Image src={chatConfig.avatar} avatar />\n              ) : (\n                <div className=\"empty-avatar\">\n                  {chatConfig.userName[0]?.toUpperCase()}\n                </div>\n              )}\n\n              <Icon corner name=\"camera\" inverted circular />\n            </IconGroup>\n\n            <div className=\"current-username\">{chatConfig.userName}</div>\n            <Icon\n              onClick={() => {\n                fb.auth.signOut();\n                history.push(\"./\");\n              }}\n              className=\"sign-out\"\n              name=\"sign out\"\n            />\n          </div>\n        ) : (\n          <div className=\"user-loading\">\n            <Loader active size=\"small\" />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import { fb } from 'service';\nimport { useChat } from 'context';\nimport { Image } from 'semantic-ui-react';\nimport React, { useEffect, useState } from 'react';\nimport { useResolved } from 'hooks';\n\nexport const ChatAvatar = ({ chat, username, className }) => {\n  const { chatConfig } = useChat();\n  const fbResolved = useResolved(fb);\n  const [avatar, setAvatar] = useState('');\n  useEffect(() => {\n      fbResolved.firestore\n        ?.collection('chatUsers')\n        .where('userName', '===', username)\n        .get()\n        .then(snap => {\n          const data = snap?.docs[0].data();\n          if (data?.avatar) {\n            setAvatar(data.avatar);\n        }});\n\n  });\n\n  return avatar ? (\n    \n    <Image className={className || 'chat-list-avatar'} src={avatar} />\n  )\n  : (\n\n    <div className={className || 'empty-avatar'}>\n      {chat.people\n        .find(p => p?.person?.username\n           !==\n           chatConfig?.userName)?.person?.username[0].toUpperCase()}\n    </div>\n  );\n};","import { useState } from \"react\";\nimport { useChat } from \"context\";\nimport { joinUsernames, notMe } from \"helpers\";\nimport { Icon } from \"semantic-ui-react\";\nimport { ChatAvatar, SearchUsers } from \"components\";\nexport const ChatToolbar = () => {\n  const { chatConfig, selectedChat } = useChat();\n  const [searching, setSearching] = useState(false);\n\n  return (\n    <>\n      <div className=\"chat-toolbar\">\n        <div className=\"chat-header-text\">\n          {selectedChat.people.length === 1 ? (\n            <>\n              <Icon circular inverted color=\"violet\" name=\"user cancel\" />\n              <div className=\"chat-list-preview\">\n                <div className=\"preview-username\">No One Added Yet</div>\n              </div>\n            </>\n          ) : selectedChat.people.length === 2 ? (\n            <>\n              <ChatAvatar\n                username={notMe(chatConfig, selectedChat)}\n                chat={selectedChat}\n              />\n              <div className=\"chat-list-preview\">\n                <div className=\"preview-username\">\n                  {notMe(chatConfig, selectedChat)}\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              <Icon circular inverted color=\"brown\" name=\"users\" />\n              <div className=\"chat-list-preview\">\n                <div className=\"preview-username\">\n                  {joinUsernames(\n                    selectedChat.people,\n                    chatConfig.userName\n                  ).slice(0, 200)}\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"add-user-icon\">\n          <Icon\n            color=\"grey\"\n            name=\"user plus\"\n            onClick={() => setSearching(true)}\n          />\n        </div>\n      </div>\n\n      <SearchUsers closeFn={() => setSearching(false)} visible={searching} />\n    </>\n  );\n};\n","import { useChat } from 'context';\nimport { useDebounce } from 'hooks';\nimport { Search } from 'semantic-ui-react';\nimport { useEffect, useRef, useState } from 'react';\nimport { addPerson, getOtherPeople } from 'react-chat-engine';\n\nexport const SearchUsers = ({ visible, closeFn }) => {\n  let searchRef = useRef();\n\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const debouncedSearchTerm = useDebounce(searchTerm, 750);\n\n  // null -> not searching for results\n  // [] -> No results\n  // [...] -> Results\n  const [searchResults, setSearchResults] = useState(null);\n\n  useEffect(() => {\n    if (visible && searchRef) {\n      searchRef.focus();\n    }\n  }, [visible]);\n\n  const {\n    myChats,\n    setMyChats,\n    chatConfig,\n    selectedChat,\n    setSelectedChat,\n  } = useChat();\n\n  const selectUser = username => {\n    addPerson(chatConfig, selectedChat.id, username, () => {\n      const filteredChats = myChats.filter(c => c.id !== selectedChat.id);\n      const updatedChat = {\n        ...selectedChat,\n        people: [...selectedChat.people, { person: { username } }],\n      };\n\n      setSelectedChat(updatedChat);\n      setMyChats([...filteredChats, updatedChat]);\n      closeFn();\n    });\n  };\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      setLoading(true);\n      getOtherPeople(chatConfig, selectedChat.id, (chatId, data) => {\n        const userNames = Object.keys(data)\n          .map(key => data[key].username)\n          .filter(user =>\n            user.toLowerCase().includes(debouncedSearchTerm.toLowerCase()),\n          );\n        setSearchResults(userNames.map(user => ({ title: user })));\n        setLoading(false);\n      });\n    } else {\n      setSearchResults(null);\n    }\n  }, [debouncedSearchTerm, chatConfig, selectedChat]);\n\n  return (\n    <div\n      className=\"user-search\"\n      style={{ display: visible ? 'block' : 'none' }}\n    >\n      <Search\n        fluid\n        onBlur={closeFn}\n        loading={loading}\n        value={searchTerm}\n        placeholder=\"Search For Users\"\n        open={!!searchResults && !loading}\n        input={{ ref: r => (searchRef = r) }}\n        onSearchChange={e => setSearchTerm(e.target.value)}\n        results={searchResults}\n        onResultSelect={(e, data) => {\n          if (data.result?.title) {\n            selectUser(data.result.title);\n          }\n        }}\n      />\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import { useChat } from 'context';\nimport { ChatAvatar } from 'components';\nimport { groupMessages } from 'helpers';\nimport { useScrollToBottom } from 'hooks';\n\nexport const MessageList = () => {\n  const { selectedChat } = useChat();\n  useScrollToBottom(selectedChat, 'chat-messages');\n\n  return (\n    <div className=\"chat-messages\">\n      {!!selectedChat.messages.length ? (\n        groupMessages(selectedChat.messages).map((m, index) => (\n          <div key={index} className=\"chat-message\">\n            <div className=\"chat-message-header\">\n              <ChatAvatar\n                className=\"message-avatar\"\n                username={m[0]?.sender.username}\n                chat={selectedChat}\n              />\n            </div>\n\n            <div className=\"message-content\">\n              {m.map((individualMessage, index) => (\n                <div key={index}>\n                  <div className=\"message-text\">{individualMessage.text}</div>\n\n                  {!!individualMessage.attachments.length && (\n                    <img\n                      className=\"message-image\"\n                      src={individualMessage.attachments[0].file}\n                      alt={individualMessage.id + '-attachment'}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ))\n      ) : (\n        <div className=\"no-messages-yet\">No messages yet</div>\n      )}\n    </div>\n  );\n};","import { useEffect } from \"react\";\n\nexport const useScrollToBottom = (trigger, className) => {\n  useEffect(() => {\n    if (!!trigger) {\n      Promise.all(\n        Array.from(document.images)\n          .filter((img) => !img.complete)\n          .map(\n            (img) =>\n              new Promise((resolve) => {\n                img.onload = img.onerror = resolve;\n              })\n          )\n      ).then(() => {\n        document\n        .getElementsByClassName(\n          className\n        )[0].scrollTop = document.getElementsByClassName(\n          className\n        )[0].scrollHeight;\n      });\n    }\n  }, [trigger, className]);\n};\n","import AvatarEditor from \"react-avatar-editor\";\nimport { Image, Modal } from \"semantic-ui-react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const ImageUpload = ({\n  file,\n  close,\n  onSubmit,\n  crop = false,\n  header = \"Send This Image?\",\n}) => {\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const cropRef = useRef();\n\n  useEffect(() => {\n    const fr = new FileReader();\n    fr.onload = () => setImageSrc(fr.result);\n    fr.readAsDataURL(file);\n  }, [file]);\n\n  return (\n    <Modal dimmer=\"blurring\" open={true}>\n      <Modal.Header>{header}</Modal.Header>\n\n      <Modal.Content image>\n        {crop ? (\n          <AvatarEditor\n            ref={cropRef}\n            width={200}\n            height={200}\n            border={50}\n            image={imageSrc}\n          />\n        ) : (\n          <Image size=\"medium\" src={imageSrc} alt=\"preview\" />\n        )}\n      </Modal.Content>\n\n      <Modal.Actions>\n        <div className=\"image-upload-actions\">\n          <button className=\"cancel\" onClick={close}>\n            Cancel\n          </button>\n          <button\n            className=\"submit\"\n            onClick={() => {\n              if (crop && cropRef) {\n                const canvas = cropRef.current\n                  .getImageScaledToCanvas()\n                  .toDataURL();\n                fetch(canvas)\n                  .then((res) => res.blob())\n                  .then((blob) => onSubmit(blob));\n              } else {\n                onSubmit();\n              }\n            }}\n          >\n            Upload\n          </button>\n        </div>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","import { NavBar } from \"components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const Home = () => {\r\n  useEffect(() => {\r\n    AOS.init();\r\n  }, []);\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"home\">\r\n      <NavBar />\r\n      <>\r\n        <div className=\"vector\" />\r\n        <div className=\"globel-container\">\r\n          <div className=\"home-contents\">\r\n            <div className=\"call-to\">\r\n              <h1\r\n                data-aos=\"fade-left\"\r\n                data-aos-offset=\"200\"\r\n                data-aos-duration=\"1000\"\r\n                data-aos-easing=\"ease-out\"\r\n                data-aos-mirror=\"true\"\r\n                data-aos-once=\"false\"\r\n                className=\"call-Header\"\r\n              >\r\n                Speak<span> Freely</span>\r\n              </h1>\r\n              <p\r\n                data-aos=\"fade-left\"\r\n                data-aos-offset=\"200\"\r\n                data-aos-duration=\"1500\"\r\n                data-aos-easing=\"linear\"\r\n                data-aos-mirror=\"true\"\r\n                data-aos-once=\"false\"\r\n                data-aos-anchor-placement=\"bottom-bottom\"\r\n                className=\"call-parag\"\r\n              >\r\n                {\" \"}\r\n                With AtlasChat, you'll get fast, simple, secure messaging and\r\n                simple .Secure.Reliable messaging.{\" \"}\r\n              </p>\r\n              <button\r\n                data-aos=\"fade-left\"\r\n                data-aos-offset=\"200\"\r\n                data-aos-duration=\"2000\"\r\n                data-aos-easing=\"linear\"\r\n                data-aos-mirror=\"true\"\r\n                data-aos-once=\"false\"\r\n                onClick={() => {\r\n                  history.push(\"/signup\");\r\n                }}\r\n                className=\"call-btn\"\r\n              >\r\n                Singup\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            data-aos=\"fade-right\"\r\n            data-aos-offset=\"200\"\r\n            data-aos-duration=\"1500\"\r\n            data-aos-easing=\"ease-out\"\r\n            data-aos-mirror=\"true\"\r\n            data-aos-once=\"false\"\r\n            className=\"home-hero\"\r\n          ></div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n","import { NavBar } from \"components\"\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const About = () => {\r\n  useEffect(() => {\r\n    AOS.init();\r\n  }, []);\r\n  return (\r\n      <div className=\"about\">\r\n          <NavBar/>\r\n          <div className=\"about-container\">\r\n            <div  \r\n            className=\"about-content\">\r\n              <h1 data-aos=\"fade-left\"\r\n          data-aos-duration=\"1400\"\r\n          data-aos-easing=\"ease-out\"\r\n          data-aos-mirror=\"true\"\r\n          data-aos-once=\"false\" className='about-header'>About Us</h1>\r\n              <p  data-aos=\"fade-left\"\r\n          data-aos-duration=\"1900\"\r\n          data-aos-easing=\"ease-out\"\r\n          data-aos-mirror=\"true\"\r\n          data-aos-once=\"false\"className='about-parag'>A company is the most efficient organization \r\n              that can drive a sustained change \r\n              for society. Companies have a duty to build a healthy ecosystem.\r\n               Atlas also goes to great lengths to bring about meaningful changes to society. \r\n               Such thoughts and efforts shape each of our services.\r\n               And so we make this world a better place than we found it today.</p>\r\n            </div>\r\n            <div data-aos=\"fade-left\"\r\n          data-aos-duration=\"1000\"\r\n          data-aos-easing=\"ease-out\"\r\n          data-aos-mirror=\"true\"\r\n          data-aos-once=\"false\" className='about-hero'>\r\n              <div className=\"sally\"></div>\r\n              </div>\r\n          </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}